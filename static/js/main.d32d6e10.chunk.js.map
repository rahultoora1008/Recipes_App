{"version":3,"sources":["svg/chef.svg","Components/Navbar.js","Components/Recipe.js","Components/RecipeList.js","Components/RecipeForm.js","RecipeApp.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","id","alt","src","chefSvg","onClick","this","props","onAddRecipe","Component","defaultProps","Recipe","title","img","instructions","onDelete","ingredients","map","ing","index","key","className","type","RecipeList","recipes","r","RecipeInput","state","handleChange","bind","handleNewIngredient","handleChangeIng","handleSubmit","e","setState","target","name","value","Number","split","i","preventDefault","onSave","onClose","onKeyDown","inputs","size","autoComplete","placeholder","onChange","onSubmit","htmlFor","autoFocus","style","marginTop","rows","cols","alignSelf","marginRight","RecipeApp","nextRecipeId","showForm","handleSave","onEscKeyPress","recipe","prevState","newRecipe","keyCode","filter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d32d6e10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chef.1cdf3e84.svg\";","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\nimport chefSvg from '../svg/chef.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Navbar extends Component {\r\n\tstatic defaultProps = {\r\n\t\tonAddRecipe() {}\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tonAddRecipe: PropTypes.func\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t<a>\r\n\t\t\t\t\t<div id=\"logo-container\">\r\n\t\t\t\t\t\t<img alt=\"logo\" id=\"nav-logo\" src={chefSvg} />\r\n\t\t\t\t\t\t<h1>Recipes</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a onClick={this.props.onAddRecipe}>Add Recipe</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a>Home</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a>About</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a>Contact Us</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Recipe.css';\r\n\r\nclass Recipe extends Component {\r\n\tstatic propTypes = {\r\n\t\ttitle: PropTypes.string.isRequired,\r\n\t\tingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\t\tinstructions: PropTypes.string.isRequired,\r\n\t\timg: PropTypes.string.isRequired,\r\n\t\tid: PropTypes.number.isRequired,\r\n\t\tonDelete: PropTypes.func.isRequired\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { title, img, instructions, id, onDelete } = this.props; // Destructuring/Shorthand for title = this.props.title\r\n\t\tconst ingredients = this.props.ingredients.map((ing, index) => (\r\n\t\t\t<li key={index}>{ing}</li> // array of jsx elements not strings\r\n\t\t));\r\n\t\treturn (\r\n\t\t\t// Never return multiple JSX elements next to each other hence a Wrap it in a div\r\n\t\t\t<div className=\"recipe-card\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"recipe-card-img\">\r\n\t\t\t\t\t\t<img src={img} alt={title} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"recipe-card-content\">\r\n\t\t\t\t\t\t<div className=\"recipe-title\">{title} </div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tIngredients:\r\n\t\t\t\t\t\t\t<ul>{ingredients}</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tInstructions:\r\n\t\t\t\t\t\t\t<p>{instructions}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"deleteButton\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={() => onDelete(id)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Recipe;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Recipe from './Recipe';\r\nimport './RecipeList.css';\r\n\r\nclass RecipeList extends Component {\r\n\tstatic propTypes = {\r\n\t\trecipes: PropTypes.arrayOf(PropTypes.object),\r\n\t\tonDelete: PropTypes.func.isRequired\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { onDelete } = this.props;\r\n\t\tconst recipes = this.props.recipes.map((r, id) => <Recipe key={r.id} {...r} onDelete={onDelete} />);\r\n\r\n\t\treturn <div className=\"recipe-list\">{recipes}</div>;\r\n\t}\r\n}\r\n\r\nexport default RecipeList;\r\n","import React, { Component } from 'react';\r\nimport './RecipeForm.css';\r\n\r\nclass RecipeInput extends Component {\r\n\tstatic defaultProps = {\r\n\t\tonClose() {},\r\n\t\tonKeyDown() {},\r\n\t\tonSave() {}\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: '',\r\n\t\t\tinstructions: '',\r\n\t\t\tingredients: [ '' ],\r\n\t\t\timg: ''\r\n\t\t};\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleNewIngredient = this.handleNewIngredient.bind(this);\r\n\t\tthis.handleChangeIng = this.handleChangeIng.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t}\r\n\r\n\thandleNewIngredient(e) {\r\n\t\tconst { ingredients } = this.state;\r\n\t\tthis.setState({ ingredients: [ ...ingredients, '' ] });\r\n\t}\r\n\r\n\thandleChangeIng(e) {\r\n\t\tconst index = Number(e.target.name.split('-')[1]);\r\n\t\tconst ingredients = this.state.ingredients.map((ing, i) => (i === index ? e.target.value : ing));\r\n\t\tthis.setState({ ingredients });\r\n\t}\r\n\r\n\thandleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onSave({ ...this.state });\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t\tinstructions: '',\r\n\t\t\tingredients: [ '' ],\r\n\t\t\timg: ''\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { title, instructions, img, ingredients } = this.state;\r\n\t\tconst { onClose } = this.props;\r\n\t\tconst { onKeyDown } = this.props;\r\n\t\tlet inputs = ingredients.map((ing, i) => (\r\n\t\t\t<div className=\"recipe-form-line\" key={`ingredient-${i}`}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t{i + 1 + '.'}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname={`ingredient-${i}`}\r\n\t\t\t\t\t\tvalue={ing}\r\n\t\t\t\t\t\tsize={45}\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=\" Ingredient\"\r\n\t\t\t\t\t\tonChange={this.handleChangeIng}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"recipe-form-container \" onKeyDown={onKeyDown}>\r\n\t\t\t\t<form className=\"recipe-form card\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<button type=\"button\" className=\"close-button\" onClick={onClose}>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t<strong>Add New Recipe</strong>\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t<div className=\"recipe-form-line\">\r\n\t\t\t\t\t\t<label htmlFor=\"recipe-title-input\">Title</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"recipe-title-input\"\r\n\t\t\t\t\t\t\tkey=\"title\"\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\tsize={42}\r\n\t\t\t\t\t\t\tplaceholder=\"Recipe Title\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<label htmlFor=\"recipe-instructions-input\" style={{ marginTop: '5px' }}>\r\n\t\t\t\t\t\tInstructions\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tplaceholder=\"Write down the Instructions over here\"\r\n\t\t\t\t\t\tkey=\"instructions\"\r\n\t\t\t\t\t\tid=\"recipe-instructions-input\"\r\n\t\t\t\t\t\ttype=\"Instructions\"\r\n\t\t\t\t\t\tname=\"instructions\"\r\n\t\t\t\t\t\trows=\"8\"\r\n\t\t\t\t\t\tcols=\"50\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tvalue={instructions}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{inputs}\r\n\t\t\t\t\t<button type=\"button\" onClick={this.handleNewIngredient} className=\"buttons\">\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\"recipe-form-line\">\r\n\t\t\t\t\t\t<label htmlFor=\"recipe-img-input\">Image Url</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tplaceholder=\"https://.....\"\r\n\t\t\t\t\t\t\tid=\"recipe-img-input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"img\"\r\n\t\t\t\t\t\t\tvalue={img}\r\n\t\t\t\t\t\t\tsize={36}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"buttons btn btn-primary\"\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'flex-end', marginRight: 0 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSAVE\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RecipeInput;\r\n","import React, { Component } from 'react';\n//import Recipe from './Components/Recipe';\nimport './RecipeApp.css';\nimport Navbar from './Components/Navbar';\nimport RecipeList from './Components/RecipeList';\nimport RecipeForm from './Components/RecipeForm';\n//import PropTypes from 'prop-types';\n\nclass RecipeApp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trecipes: [\n\t\t\t\t{\n\t\t\t\t\tid: 0,\n\t\t\t\t\ttitle: 'Spaghetti',\n\t\t\t\t\tingredients: [ 'pasta', '8 cups water', '1 box spaghetti' ],\n\t\t\t\t\tinstructions:\n\t\t\t\t\t\t'Open jar of Spaghetti sauce. Bring to simmer. Boil water. Cook pasta until done. Combine pasta and sauce.',\n\t\t\t\t\timg: 'spaghetti.jpg'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\ttitle: 'Milkshake',\n\t\t\t\t\tingredients: [ '1 scoops ice cream', '8 ounces milk' ],\n\t\t\t\t\tinstructions: 'Combine ice cream and milk. Blend until creamy.',\n\t\t\t\t\timg: 'milkshake.jpg'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\ttitle: 'Avocado Toast',\n\t\t\t\t\tingredients: [ '3 slices of bread', '1 avocado', '1 Tbsp olive oil', '1 pinch of salt', 'pepper' ],\n\t\t\t\t\tinstructions: 'Toast bread. Slice avocado and spread on bread. Add salt, oil, and pepper to taste.',\n\t\t\t\t\timg: 'avocado_toast.jpg'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 3,\n\t\t\t\t\ttitle: 'Chocolate Chip Cookies',\n\t\t\t\t\tingredients: [ '3 slices of bread', '1 avocado', '1 Tbsp olive oil', '1 pinch of salt', 'pepper' ],\n\t\t\t\t\tinstructions:\n\t\t\t\t\t\t'Preheat oven to 375 degrees F. Combine flour, baking soda and salt in small bowl. Beat butter, granulated sugar, brown sugar and vanilla extract in large mixer bowl until creamy. Add eggs, one at a time, beating well after each addition. Gradually beat in flour mixture. Stir in morsels and nuts. Drop by rounded tablespoon onto ungreased baking sheets. Bake for 9 to 11 minutes or until golden brown. Cool on baking sheets for 2 minutes; remove to wire racks to cool completely.',\n\t\t\t\t\timg: 'Chocolate Chip Cookies.jpg'\n\t\t\t\t}\n\t\t\t],\n\t\t\tnextRecipeId: 4,\n\t\t\tshowForm: false\n\t\t};\n\n\t\tthis.handleSave = this.handleSave.bind(this);\n\t\tthis.onEscKeyPress = this.onEscKeyPress.bind(this);\n\t\tthis.onDelete = this.onDelete.bind(this);\n\t}\n\n\thandleSave(recipe) {\n\t\tthis.setState((prevState, props) => {\n\t\t\tconst newRecipe = { ...recipe, id: this.state.nextRecipeId };\n\t\t\treturn {\n\t\t\t\tnextRecipeId: prevState.nextRecipeId + 1,\n\t\t\t\trecipes: [ ...this.state.recipes, newRecipe ],\n\t\t\t\tshowForm: false\n\t\t\t};\n\t\t});\n\t}\n\n\tonEscKeyPress(e) {\n\t\tif (e.keyCode === 27) {\n\t\t\tthis.setState({ showForm: false });\n\t\t}\n\t}\n\n\tonDelete(id) {\n\t\tconst recipes = this.state.recipes.filter((r) => r.id !== id);\n\t\tthis.setState({ recipes });\n\t}\n\n\trender() {\n\t\tconst { showForm } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar onAddRecipe={() => this.setState({ showForm: true })} />\n\t\t\t\t{showForm ? (\n\t\t\t\t\t<RecipeForm\n\t\t\t\t\t\tonSave={this.handleSave}\n\t\t\t\t\t\tonClose={() => this.setState({ showForm: false })}\n\t\t\t\t\t\tonKeyDown={this.onEscKeyPress}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<RecipeList recipes={this.state.recipes} onDelete={this.onDelete} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RecipeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RecipeApp from './RecipeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RecipeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}